name: Deploy
on:
  push:
    branches: [main]
concurrency:
  group: deploy
  cancel-in-progress: true
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  fender-server:
    name: Render server
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKERHUB_AUTH_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v5
        with:
          sparse-checkout: |
            Cargo.toml
            Cargo.lock
            render-server
            rust-colors
            palette.json
            deploy
      - name: Build and push container
        uses: docker/build-push-action@v6
        with:
          file: ./deploy/render-server.Dockerfile
          build-args: APP_VERSION=${{ github.sha }}
          platforms: linux/amd64
          push: true
          tags: ${{ vars.DOCKERHUB_REGISTRY }}/canvas-render-server:latest
          cache-from: type=registry,ref=${{ vars.DOCKERHUB_REGISTRY }}/canvas-render-server:buildcache
          cache-to: type=registry,ref=${{ vars.DOCKERHUB_REGISTRY }}/canvas-render-server:buildcache,mode=max
  wasm:
    name: WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Cargo.toml
            Cargo.lock
            render-server
            rust-colors
            image-codec
            palette.json
      - name: Determine cache key
        id: cache-key
        run: echo "KEY=${{ hashFiles('image-codec/**') }}" >> "$GITHUB_OUTPUT"
      - name: Lookup WASM
        uses: actions/cache/restore@v4
        id: lookup-wasm
        with:
          path: image-codec/pkg/
          key: ${{ runner.os }}-wasm-${{ steps.cache-key.outputs.key }}
          lookup-only: true
      - name: Setup Rust
        if: steps.lookup-wasm.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Restore Rust cache
        if: steps.lookup-wasm.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install wasm-pack
        uses: baptiste0928/cargo-install@v3
        with:
          crate: wasm-pack
      - name: Build WASM
        if: steps.lookup-wasm.outputs.cache-hit != 'true'
        run: cd image-codec && wasm-pack build --release --target web
      - name: Upload WASM
        if: steps.lookup-wasm.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: image-codec/pkg/
          key: ${{ runner.os }}-wasm-${{ steps.cache-key.outputs.key }}
  app:
    name: App to GH pages
    needs: [wasm]
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "22.18.0"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            package.json
            package-lock.json
            contracts/package.json
            image-codec
            app
      - name: Download WASM
        uses: actions/cache/restore@v4
        with:
          path: image-codec/pkg/
          key: ${{ runner.os }}-wasm-${{ hashFiles('image-codec/**') }}
      - name: NPM install
        run: npm ci --workspace app
      - name: Build
        run: cd app && npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./app/dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
