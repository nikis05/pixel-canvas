name: Cache
on:
  push:
    branches: [main]
concurrency:
  group: cache
  cancel-in-progress: true
jobs:
  js:
    name: JS
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: "22.18.0"
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/checkout@v5
        with:
          sparse-checkout: |
            package.json
            package-lock.json
            app
            contracts
      - uses: actions/cache/restore@v4
        id: lookup-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          lookup-only: true
      - uses: actions/cache@v4
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: NPM install
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        run: npm ci
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        with:
          sparse-checkout: |
            Cargo.toml
            Cargo.lock
            render-server
            rust-colors
            palette.json
      - uses: actions/cache/restore@v4
        id: lookup-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          lookup-only: true
      - name: Setup Rust
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - uses: actions/cache@v4
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Clippy
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        run: cargo clippy --locked
